name: github-actions-2
on: push
env:
  CD_GIT_REPOSITORY: https://github.com/Devendranathashok/my-helmcharts.git
  CD_MANIFEST_FILE: values.yaml
  CD_CHART_REPO: my-helmcharts/my-microservice
jobs:
  lint:
    runs-on: my-runner
    steps:
      - name: checkout the code
        uses: actions/checkout@v3
      - name: install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: ci
        run: npm ci
  test:
    needs: lint 
    runs-on: my-runner
    steps:   
      - name: checkout the code
        uses: actions/checkout@v3
      - name: install node js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: npm ci
        run: npm ci    
  build: 
    needs: test
    runs-on: my-runner 
    steps: 
    - name: checkout the code
      uses: actions/checkout@v3
    - name: node setup
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: npm ci
      run: npm ci
  docker-build-push:
    needs: build
    runs-on: my-runner
    steps:
    - name: checkout
      uses: actions/checkout@v3 
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: devendranathashok/my-microservice
        tags: ${{ github.sha }}
        #tags: ${{ env.hash }}
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKERUSER }}
        password: ${{ secrets.DOCKERPASSWORD }}
  Security:
    needs: docker-build-push
    runs-on: my-runner
    steps:
    - name: pull docker image
      run: |
          docker login -u ${{ secrets.DOCKERUSER }} -p ${{ secrets.DOCKERPASSWORD }}
          docker pull devendranathashok/my-microservice:${{ github.sha }}'
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: 'devendranathashok/my-microservice:${{ github.sha }}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  Deploy_to_k8s:
    needs: Security
    runs-on: my-runner
    steps:
      - name: Checkout Repository B
        uses: actions/checkout@v3
        with:
          repository: devendranathashok/my-helmcharts 
          token: ${{ secrets.GH_PAT }}
          path: my-helmcharts
      - name: modify helm     
        run: |  
          cd my-helmcharts/my-microservice
          ls -lrt
          docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write --inplace --verbose $CD_MANIFEST_FILE image.tag ${{ github.sha }}
          git config user.name "devendranathashok"
          git config user.email "ashok.kammala@gmail.com"
          git add .
          git commit -m "Update Helm charts"
          git push origin master          

           
